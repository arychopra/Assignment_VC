{
  "articles": [
    {
      "path": "about.html",
      "title": "About this site",
      "description": "Some additional details about the website",
      "author": [],
      "contents": "\r\n\r\n\r\n\r\n",
      "last_modified": "2021-07-17T14:31:55+08:00"
    },
    {
      "path": "Build.html",
      "title": "Building the Charts",
      "description": "A new article created using the Distill format.\n",
      "author": [
        {
          "name": "Aryah U. Chopra",
          "url": "https://www.linkedin.com/in/aryahuc/"
        }
      ],
      "date": "`r Sys.Date()`",
      "contents": "\r\nDistill is a publication format for scientific and technical writing, native to the web.\r\nLearn more about using Distill for R Markdown at https://rstudio.github.io/distill.\r\n\r\n\r\n\r\n",
      "last_modified": "2021-07-17T14:31:56+08:00"
    },
    {
      "path": "Data_Prep.html",
      "title": "Data Preparation",
      "description": "A new article created using the Distill format.\n",
      "author": [
        {
          "name": "Aryah U. Chopra",
          "url": "https://www.linkedin.com/in/aryahuc/"
        }
      ],
      "date": "`r Sys.Date()`",
      "contents": "\r\n\r\n\r\nd-article div.sourceCode {\r\n    background-color: rgba(247, 230, 230, 0.05);\r\n    border-color: blue;\r\n    border: 1px solid rgba(249, 83, 85, 0.2);\r\n    border-radius: 1px;\r\n    overflow-x: auto !important;\r\n    max-width: 704px;\r\n\r\n}\r\n\r\nd-article pre{\r\n    background-color: rgba(217, 217, 217, 0.05);\r\n    #border: 1px solid rgba(217, 217, 217, 0.2);\r\n    border-radius: 1px;\r\n    overflow-x: auto !important;\r\n    max-width: 704px;\r\n}\r\n.tooltip {\r\n  position: relative;\r\n  display: inline-block;\r\n  border-bottom: 1px dotted black;\r\n  background-color: white;\r\n  border-color: coral;\r\n}\r\n\r\n.tooltip .tooltiptext {\r\n  visibility: visible;\r\n  width: auto;\r\n  background-color: white;\r\n  color: #000000;\r\n  text-align: center;\r\n  border-radius: 6px;\r\n  padding: 5px 0;\r\n  position: absolute;\r\n  z-index: 1;\r\n  bottom: 150%;\r\n  left: 50%;\r\n  margin-left: -60px;\r\n}\r\n\r\n\r\n\r\nbody {line-height: 1;}\r\n\r\n\r\n\r\nscript src = \"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"\r\n\r\n\r\n\r\n $(document).ready(function() {\r\n    $('body').prepend('<div class=\\\"zoomDiv\\\"><img src=\\\"\\\" class=\\\"zoomImg\\\"><\/div>');\r\n    // onClick function for all plots (img's)\r\n    $('img:not(.zoomImg)').click(function() {\r\n      $('.zoomImg').attr('src', $(this).attr('src')).css({width: '100%'});\r\n      $('.zoomDiv').css({opacity: '1', width: 'auto', border: '1px solid white', borderRadius: '5px', position: 'fixed', top: '50%', left: '50%', marginRight: '-50%', transform: 'translate(-50%, -50%)', boxShadow: '0px 0px 50px #888888', zIndex: '50', overflow: 'auto', maxHeight: '100%'});\r\n    });\r\n    // onClick function for zoomImg\r\n    $('img.zoomImg').click(function() {\r\n      $('.zoomDiv').css({opacity: '0', width: '0%'}); \r\n    });\r\n  });\r\n\r\n\r\n\r\n\r\n3 Data Preparation\r\nThe MC1 has the following data/documents:\r\nHistorical Documents\r\nNews Articles\r\nResumes (Word documents)\r\nEmail Headers (CSV File)\r\nEmployee Records (XLSX File)\r\nFactbook - Kronos (Word document)\r\nFactbook - Tethys (Word document)\r\nGAStech Kronos Organization Chart (PDF Image)\r\nMap of Krono (Image)\r\n3.1 News Article Data\r\nFirst, we will load the following libraries for the data clean:\r\n\r\n\r\nlibrary(tidyverse)\r\nlibrary(lubridate)\r\nlibrary(DT)\r\n\r\n\r\n\r\n3.1.1 Merging the New Articles\r\nThe MC1 folder contains a folder News Articles. Within it are subfolders containing the 29 different news sources, within which are articles in a text format.\r\nWe will merge all of the new article’s contents into a tidy format for text processing later, this means that each row will represent one observation and each column, one variable.\r\nThe text file have been tagged as such:\r\n\r\n\r\n\r\nRunning the following code chunk will give us the combined data:\r\n\r\n\r\n\r\ncurr_dir = c(dir(path = 'MC1/News Articles/'))\r\ndf.news = data.frame()\r\ncounter = 1\r\n\r\nfor (folder in curr_dir){\r\n  \r\n  files_in_curr_dir <- c(list.files(path = paste('MC1/News Articles/', folder,\r\n                                                 '/', sep='')))\r\n  #print(files_in_curr_dir)\r\n\r\n  for (file in files_in_curr_dir){\r\n      vector <- c()\r\n      chunk_text <- c()\r\n      \r\n      for (i in as.vector(readLines(paste('MC1/News Articles/', folder,\r\n                                          '/', file, sep = '')))){\r\n        if (grepl(\"SOURCE:|LOCATION:|AUTHOR:|PUBLISHED:|TITLE:|NOTE:\", i, \r\n                  fixed = FALSE)){\r\n          vector <- c(vector,(i))\r\n        } else if(grepl(\"\\\\S+\",i)){\r\n          chunk_text<- c(chunk_text,i)\r\n        }\r\n      }\r\n      \r\n      chunk_text <- capture.output(cat(chunk_text))\r\n      chunk_text <- paste(\"TEXT:\", chunk_text)\r\n      fileName <- c(paste(\"FILE:\",file))\r\n      article <- c(fileName,vector,chunk_text)\r\n\r\n      \r\n      textlist <- lapply(1:length(article),\r\n                         function(j) data.frame(\r\n                           caseno=counter,\r\n                           rawdata=article[[j]],\r\n                           stringsAsFactors = FALSE))\r\n      \r\n      df <- do.call(rbind, textlist)\r\n      df[,c(\"type\",\"entry\")] <- str_trim(str_split_fixed(df$rawdata,\":\",2))\r\n      df <- df[,c(\"caseno\",\"type\",\"entry\")]\r\n      df <- pivot_wider(df,\r\n                        names_from = type,\r\n                        values_from = entry)\r\n      \r\n      df.news <- dplyr::bind_rows(df.news,df)\r\n      #print(paste(folder,file))\r\n      \r\n      counter <- counter + 1\r\n  }\r\n}\r\n\r\n\r\n\r\nWhen running the above code chunk, the for-loop will be interrupted multiple times due to the following error:\r\n\r\n\r\n\r\nDuring the run of the code, we can check which file gives us the error by looking at the Global Environment section of the RStudio window as shown below:\r\n\r\n\r\n\r\nThis tells us that the interrupting file is 37.txt in the Central Bulletin folder.\r\nThis error is a result of errored placement of the tags within the file. Opening up the file shown above we can see that there are multiple tags. As such, there is an attempt to concatenate a list and character, which is not possible.\r\n\r\n\r\n\r\nUpon running the entire code, the files that have the errors have been identified as:\r\n37.txt – Central Bulletin\r\n791.txt – Daily Pegasus\r\n188.txt – News Online Today\r\n52.txt – News Online Today\r\n570.txt – News Online Today\r\n36.txt – The Continent\r\n127.txt – The Explainer\r\n205.txt – The Explainer\r\nOut of 845 files, there are 8 such files with error. Since there is a small number, we will edit ourselves.\r\n\r\n\r\n\r\nOnce the files have been edited, re-run the first code chunk to get the final merged dataframe, df.news.\r\n\r\n\r\n\r\n\r\n\r\n\r\nThe dataframe, df.news, contains 845 observations of 9 variables, this tallies with the 845 news articles.\r\nThe columns caseno can be dropping using the following code:\r\n\r\n\r\ndf.news <- df.news %>% \r\n            select(-caseno)\r\n\r\n\r\n\r\n3.1.2 Editing the PUBLISHED column\r\nThe PUBLISHED column is not on in a date-time format. In addition to that, we can see that the PUBLISHED column has some odd entries.\r\nRunning the following code chunk, we can see that the total count of anomalies is 42 that are not in a date format that can be parsed (either yyyy/mm/dd or dd Month yyyy) by the lubridate library.\r\n\r\n\r\n# This code tells us the total count of anomalies identified\r\ndf.news %>% \r\n        select(FILE, SOURCE, PUBLISHED) %>% \r\n        filter(str_detect(PUBLISHED,\"/\",negate=T)) %>%      \r\n        filter(str_detect(PUBLISHED,\"\\\\d+\\\\s\\\\w+\\\\s\\\\d+\", negate = T)) %>%\r\n        summarise(\"Total Count of Anomalies\" = n())\r\n\r\n# This code tells us identifies the no of each error encountered\r\ndf.news %>% \r\n        select(FILE, SOURCE, PUBLISHED) %>% \r\n        filter(str_detect(PUBLISHED,\"/\",negate=T)) %>%      \r\n        filter(str_detect(PUBLISHED,\"\\\\d+\\\\s\\\\w+\\\\s\\\\d+\", negate = T)) %>%\r\n        count(\"Type of Error\" = PUBLISHED) %>%\r\n        rename(Count = n)\r\n\r\n\r\n\r\nThe output will look like so:\r\n\r\n\r\n\r\n\r\n\r\n\r\nThis is similar to the errors encountered during the merging of the articles, as the tags were probably wrongly placed. In addition to that, there are dates that are in different formats.\r\nIn order to see which files the errors occur in:\r\n\r\n\r\ndf.news %>% \r\n        select(FILE, SOURCE, PUBLISHED) %>% \r\n        filter(str_detect(PUBLISHED,\"/\",negate=T)) %>%      \r\n        filter(str_detect(PUBLISHED,\"\\\\d+\\\\s\\\\w+\\\\s\\\\d+\", negate = T))\r\n\r\n\r\n\r\nThe output will look like so:\r\n\r\n\r\n\r\nIn addition to that, another file was noted to have error: 167.txt in the INTERNATIONAL TIMES.\r\nLike earlier, we will manually edit the files and then re run the first code chunk.\r\nThe PUBLISHED column will then be changed into a date-time format shown below.\r\nFirst, we will check if any cannot be parsed with the following code.\r\n\r\n\r\ndf.news %>%\r\n        mutate(PUBLISHED = parse_date_time(PUBLISHED, orders = c(\"%y%m%d\",\"%d%m%y\"))) %>% \r\n        filter(is.na(PUBLISHED)) %>% \r\n        select(FILE, SOURCE)\r\n\r\n\r\n\r\nIf the output is 0 rows, then we can assign it with the following code:\r\n\r\n\r\ndf.news <- df.news %>%\r\n            mutate(PUBLISHED = parse_date_time(PUBLISHED, orders = c(\"%y%m%d\", \"%d%m%y\")))\r\n\r\n\r\n\r\nAll of the PUBLISHED column is in date-time format yyyy-mm-dd.\r\n3.1.3 Editing the AUTHOR column\r\nRunning the following code chunk, we can see that By Haneson Ngohebo is separated due to the “by”.\r\n\r\n\r\ndf.news %>% \r\n  distinct(AUTHOR)\r\n\r\n\r\n# A tibble: 11 x 1\r\n   AUTHOR                        \r\n   <chr>                         \r\n 1 <NA>                          \r\n 2 Petrus Gerhard                \r\n 3 By Haneson Ngohebo            \r\n 4 Maha Salo                     \r\n 5 Marcella Trapani              \r\n 6 Cato Rossini, Marcella Trapani\r\n 7 Cato Rossini                  \r\n 8 Eva Thayer                    \r\n 9 Lelio Masin                   \r\n10 Donato Petri                  \r\n11 Haneson Ngohebo               \r\n\r\nHence, we will remove all prefixes.\r\n\r\n\r\ndf.news <- df.news %>% \r\n            mutate(AUTHOR = str_remove(AUTHOR, \"By \"))\r\ndf.news %>% distinct(AUTHOR)\r\n\r\n\r\n# A tibble: 10 x 1\r\n   AUTHOR                        \r\n   <chr>                         \r\n 1 <NA>                          \r\n 2 Petrus Gerhard                \r\n 3 Haneson Ngohebo               \r\n 4 Maha Salo                     \r\n 5 Marcella Trapani              \r\n 6 Cato Rossini, Marcella Trapani\r\n 7 Cato Rossini                  \r\n 8 Eva Thayer                    \r\n 9 Lelio Masin                   \r\n10 Donato Petri                  \r\n\r\n3.1.4 Editing the LOCATION column\r\nThe LOCATION columns also contain a few errors that are due to the tag error.\r\nRunning the code below, we can get the error values\r\n\r\n\r\ndf.news %>% \r\n  mutate(LOCATION = str_to_upper(LOCATION)) %>% \r\n  group_by(LOCATION) %>% \r\n  summarise(count = n()) %>% \r\n  arrange(desc(count))\r\n\r\n\r\n\r\nThe output of the above code chunk will be:\r\n\r\n\r\n\r\nTo identify and edit the files, the following code chunk will be applied:\r\n\r\n\r\ndf.news %>% \r\n  mutate(LOCATION = str_to_upper(LOCATION))  %>% \r\n  filter(!(LOCATION %in% c(NA,\"ABILA, KRONOS\",\"CENTRUM, TETHYS\",\"DAVOS, SWITZERLAND\",\"ELODIS, KRONOS\")))\r\n\r\n\r\n\r\nThe output of the above code chunk will be:\r\n\r\n\r\n\r\nOnce all the files have been rectified, re run the first code chunk. Change all the locations to upper case.\r\n\r\n\r\ndf.news <- df.news %>% \r\n            mutate(LOCATION = str_to_upper(LOCATION))\r\n\r\n\r\n\r\n\r\n\r\ndf.news <- df.news %>% mutate(Text = str_replace_all(TEXT, \"[[:punct:]]\", \" \"))\r\n\r\n\r\n\r\n3.2 Employee Emails\r\nWe will save the email conversation CSV as df.emails dataframe using the readr package\r\n\r\n\r\ndf.emails <- read_csv('data/email headers.csv')\r\n\r\n\r\n\r\nRunning the following code chunk, we will remove all the email domains so that only the name is retained and also to convert the Date column into a datetime format.\r\n\r\n\r\ndf.emails <- df.emails %>% \r\n              mutate(To = str_remove_all(To,\"@gastech.com.kronos|@gastech.com.tethys\")) %>%\r\n              mutate(From = str_remove_all(From,\"@gastech.com.kronos|@gastech.com.tethys\")) %>%\r\n              mutate(To = str_replace_all(To,\"[.]\",\" \")) %>%\r\n              mutate(From = str_replace_all(From,\"[.]\",\" \")) %>% \r\n              mutate(Date = parse_date_time(x = Date, orders =c(\"%m%d%y %H%M\",\"%m%d%y\")))  \r\n\r\n\r\n\r\nWe will also split the Date column into two columns, to retrieve the Date and Time\r\n\r\n\r\ndf.emails <- df.emails %>% \r\n              mutate(Date.Date =  date(Date)) %>% \r\n              mutate(Date.Time =  hms::as_hms(Date))\r\n\r\n\r\n\r\n\r\n\r\ndf.emails <- df.emails %>% mutate(nTo = lengths(str_split(To,pattern=\",\"))) %>% filter(nTo<=12)\r\n\r\n\r\n\r\n3.3 Employee Bio-data\r\nWe will save the email conversation XLSX as df.emp dataframe using the readxl package\r\n\r\n\r\ndf.emp <- readxl::read_xlsx('data/EmployeeRecords.xlsx')\r\n\r\n\r\n\r\nA second column with their joined names will be created\r\n\r\n\r\ndf.emp <- df.emp %>% \r\n  unite(FullName, FirstName, LastName, sep=\" \", remove=FALSE)\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
      "last_modified": "2021-07-17T16:02:17+08:00"
    },
    {
      "path": "index.html",
      "title": "Vast Challenge",
      "description": "Welcome to the website. I hope you enjoy it!\n",
      "author": [],
      "contents": "\r\n\r\n\r\n\r\n",
      "last_modified": "2021-07-17T14:31:58+08:00"
    },
    {
      "path": "Insights.html",
      "title": "Insights & Analysis",
      "description": "A new article created using the Distill format.\n",
      "author": [
        {
          "name": "Nora Jones",
          "url": "https://example.com/norajones"
        }
      ],
      "date": "`r Sys.Date()`",
      "contents": "\r\nDistill is a publication format for scientific and technical writing, native to the web.\r\nLearn more about using Distill for R Markdown at https://rstudio.github.io/distill.\r\n\r\n\r\n\r\n",
      "last_modified": "2021-07-17T14:31:59+08:00"
    },
    {
      "path": "Introduction.html",
      "title": "Introduction",
      "description": "The Vast Challenge: MC1\n",
      "author": [
        {
          "name": "Aryah U. Chopra",
          "url": "https://www.linkedin.com/in/aryahuc/"
        }
      ],
      "date": "`r Sys.Date()`",
      "contents": "\r\n\r\n\r\nd-article div.sourceCode {\r\n    background-color: rgba(247, 230, 230, 0.05);\r\n    border-color: blue;\r\n    border: 1px solid rgba(249, 83, 85, 0.2);\r\n    border-radius: 1px;\r\n    overflow-x: auto !important;\r\n    max-width: 704px;\r\n\r\n}\r\n\r\nd-article pre{\r\n    background-color: rgba(217, 217, 217, 0.05);\r\n    #border: 1px solid rgba(217, 217, 217, 0.2);\r\n    border-radius: 1px;\r\n    overflow-x: auto !important;\r\n    max-width: 704px;\r\n}\r\n.tooltip {\r\n  position: relative;\r\n  display: inline-block;\r\n  border-bottom: 1px dotted black;\r\n  background-color: white;\r\n  border-color: coral;\r\n}\r\n\r\n.tooltip .tooltiptext {\r\n  visibility: visible;\r\n  width: auto;\r\n  background-color: white;\r\n  color: #000000;\r\n  text-align: center;\r\n  border-radius: 6px;\r\n  padding: 5px 0;\r\n  position: absolute;\r\n  z-index: 1;\r\n  bottom: 150%;\r\n  left: 50%;\r\n  margin-left: -60px;\r\n}\r\n\r\n\r\n\r\nbody {line-height: 1;}\r\n\r\n\r\n\r\nscript src = \"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"\r\n\r\n\r\n\r\n $(document).ready(function() {\r\n    $('body').prepend('<div class=\\\"zoomDiv\\\"><img src=\\\"\\\" class=\\\"zoomImg\\\"><\/div>');\r\n    // onClick function for all plots (img's)\r\n    $('img:not(.zoomImg)').click(function() {\r\n      $('.zoomImg').attr('src', $(this).attr('src')).css({width: '100%'});\r\n      $('.zoomDiv').css({opacity: '1', width: 'auto', border: '1px solid white', borderRadius: '5px', position: 'fixed', top: '50%', left: '50%', marginRight: '-50%', transform: 'translate(-50%, -50%)', boxShadow: '0px 0px 50px #888888', zIndex: '50', overflow: 'auto', maxHeight: '100%'});\r\n    });\r\n    // onClick function for zoomImg\r\n    $('img.zoomImg').click(function() {\r\n      $('.zoomDiv').css({opacity: '0', width: '0%'}); \r\n    });\r\n  });\r\n\r\n\r\n\r\n\r\n1 Introduction\r\n2 Literature Review\r\n\r\n\r\n\r\n",
      "last_modified": "2021-07-17T16:00:26+08:00"
    }
  ],
  "collections": []
}
